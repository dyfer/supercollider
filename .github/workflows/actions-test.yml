name: test-CI
on: [push]
jobs:
  test-build-linux:
    runs-on: ubuntu-18.04
    env: 
      BUILD_PATH: ${{ github.workspace }}/build
      INSTALL_PATH: ${{ github.workspace }}/build/Install
      ARTIFACT_SUFFIX: linux
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: install dependencies
        run: |
          sudo apt-get update # I was getting errors if apt-get update was not run first
          sudo apt-get install --yes build-essential cmake pkg-config libjack-jackd2-dev libsndfile1-dev libasound2-dev libavahi-client-dev libreadline6-dev libfftw3-dev libicu-dev libxt-dev libudev-dev 
      - name: install qt
        run: sudo apt-get install qt5-default qt5-qmake qttools5-dev qttools5-dev-tools qtdeclarative5-dev qtwebengine5-dev libqt5svg5-dev libqt5websockets5-dev
      - name: configure
        run: |
          mkdir $BUILD_PATH && cd $BUILD_PATH
          cmake -DSC_EL=OFF -DSC_VIM=OFF -DSC_ED=OFF -DSC_QT=ON -DSC_IDE=ON  -DCMAKE_INSTALL_PREFIX:PATH=$INSTALL_PATH -DCMAKE_BUILD_TYPE=Release .. --debug-output
      - name: build
        run: |
          cd $BUILD_PATH
          make install -j2
      - name: create archive
        run: cd $INSTALL_PATH && zip --symlinks -r $ARTIFACT_FILE . # this assumes that we end up with the build in the folder SuperCollider
        env: 
          ARTIFACT_FILE: "${{ env.INSTALL_PATH }}/SuperCollider-${{ github.sha }}-${{ env.ARTIFACT_SUFFIX }}.zip"
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        env: 
          ARTIFACT_FILE: "${{ env.INSTALL_PATH }}/SuperCollider-${{ github.sha }}-${{ env.ARTIFACT_SUFFIX }}.zip"
        with:
          name: SC-${{ github.job }}-${{ github.sha }}
          path: ${{ env.ARTIFACT_FILE }}
          retention-days: 7 # quickly remove test artifacts

  test-build-macos:
    runs-on: macos-10.15
    env: 
      BUILD_PATH: ${{ github.workspace }}/build
      INSTALL_PATH: ${{ github.workspace }}/build/Install
      HOMEBREW_NO_ANALYTICS: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      XCODE_VERSION: 11.7 # set XCode version
      ARTIFACT_SUFFIX: macOS
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: install dependencies
        run: brew install libsndfile portaudio ccache qt fftw ninja # ninja added temporarily
      - name: configure
        run: |
          mkdir $BUILD_PATH && cd $BUILD_PATH
          # cmake -G"Xcode" -DCMAKE_PREFIX_PATH=`brew --prefix qt` -DCMAKE_OSX_DEPLOYMENT_TARGET=10.10 -DSUPERNOVA=ON .. --debug-output
          cmake -G"Ninja" -DCMAKE_PREFIX_PATH=`brew --prefix qt` -DCMAKE_OSX_DEPLOYMENT_TARGET=10.10 -DSUPERNOVA=ON -DCMAKE_BUILD_TYPE=Release .. --debug-output
        env:
          DEVELOPER_DIR: "/Applications/Xcode_${{ env.XCODE_VERSION }}.app/Contents/Developer"
      - name: build
        run: cmake --build $BUILD_PATH --config Release --target install
      - name: create archive
        run: echo $ARTIFACT_FILE && cd $INSTALL_PATH && ls && zip --symlinks -r $ARTIFACT_FILE SuperCollider # this assumes that we end up with the build in the folder SuperCollider
        env: 
          ARTIFACT_FILE: "${{ env.INSTALL_PATH }}/SuperCollider-${{ github.sha }}-${{ env.ARTIFACT_SUFFIX }}.zip"
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        env: 
          ARTIFACT_FILE: "${{ env.INSTALL_PATH }}/SuperCollider-${{ github.sha }}-${{ env.ARTIFACT_SUFFIX }}.zip"
        with:
          name: SC-${{ github.job }}-${{ github.sha }}
          path: ${{ env.ARTIFACT_FILE }}
          retention-days: 7 # quickly remove test artifacts


# notes:

# main TODO:
# - linting
# - ccache
# - xcpretty
# - matrix config
# - library config
# - test suite
# - deployment

# echo $GITHUB_WORKSPACE # /home/runner/work/supercollider/supercollider

# when do we set version?
# export VERSION_TO_BUILD=${TRAVIS_TAG##Version-}

# split macos package installs?

# additional for cmake (macOS):
# -DRULE_LAUNCH_COMPILE=ccache \
# $EXTRA_CMAKE_FLAGS \
